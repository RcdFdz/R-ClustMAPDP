sample.interval=20000
"strsplit" "summaryRprof" "eval" "eval" "withVisible" "source" 
".External2" "plot.new" "plot.default" "plot" "eval" "eval" "withVisible" "source" 
"plot.xy" "plot.default" "plot" "eval" "eval" "withVisible" "source" 
"plot.xy" "plot.default" "plot" "eval" "eval" "withVisible" "source" 
"plot.xy" "plot.default" "plot" "eval" "eval" "withVisible" "source" 
"plot.xy" "plot.default" "plot" "eval" "eval" "withVisible" "source" 
"plot.xy" "plot.default" "plot" "eval" "eval" "withVisible" "source" 
"plot.xy" "plot.default" "plot" "eval" "eval" "withVisible" "source" 
"setTimeLimit" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"system.file" "FUN" "vapply" ".rs.isPackageInstalled" "<Anonymous>" 
".Call" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "runUserHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"identical" "f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "wrap_inner_loop" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"is.function" "match.fun" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"as.list" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"identical" "f" "isTRUE" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"sys.call" "identical" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "comp_lang" "f" "modify_lang" "eval" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"match.fun" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "FUN" "lapply" "vapply" "compact" "unlist" "recurse" "extract_lang" "stopifnot" "make_function" "eval" "eval" "assign" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker::whisker.render" "use_template" "devtools::use_mit_license" 
"file.exists" "find.package" "system.file" "FUN" "vapply" ".rs.isPackageInstalled" "<Anonymous>" 
